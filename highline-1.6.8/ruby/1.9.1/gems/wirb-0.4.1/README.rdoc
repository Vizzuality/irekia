== Wavy Interactive Ruby
*Wirb* colorizes your inspected Ruby objects. It is based on Wirble[http://pablotron.org/software/wirble/], but only provides and improves result highlighting. It also provides a colorization engine abstraction layer and offers flexible schemas using yaml. Wirb is part of the {irbtools suite}[https://github.com/janlelis/irbtools].

{Travis}[http://travis-ci.org/janlelis/wirb]: http://travis-ci.org/janlelis/wirb.png

== Install
Install the gem with:

  gem install wirb

== Usage
Add to your <tt>~/.irbrc</tt>

  require 'rubygems' unless defined? Gem
  require 'wirb'
  Wirb.start

== Features
* Syntax highlighting for Ruby objects
* Does not change the inspect value
* Support for generic objects, especially sets and enumerators
* Comes with tests
* Can be used without irb
* Limited stdlib/gem objects support (e.g. Set, Gem::Requirement)
* Supports 1.8, 1.9, jruby, rbx, head
* Usable with any supported terminal colors engine
* Color schemas in yaml files

== Colors
To only tweak some colors, take a look at the <tt>Wirb.schema</tt> hash. To use a custom schema, inspect the yaml files in the <tt>data/wirb/</tt> directory. You can create your own schema and load it using <tt>Wirb.load_schema(path_to_yaml_file)</tt>. Alternatively, you can use one of the bundled ones by passing a symbol instead of a path.

=== Colorizer
Wirb supports multiple colorization engines. Available engines can be found in <tt>lib/wirb/colorizer/*</tt>. Some of them require external gems as dependencies (e.g. HighLine). The current default engine is <em>Wirb0</em> (the one of previous Wirb versions, inherited from the original Wirble). It will be dropped as default engine in 1.0 (later this year), because it uses wrong color names. It will be replaced by Paint[https://github.com/janlelis/paint] or a simple colorizer engine with proper color names. You can change the colorizer using:

  Wirb.load_colorizer :Paint # or :HighLine or whatever

Be careful, though! You also need to select a color schema that supports your colorizer (Schemas define supported colorizers using the <tt>:colorizer</tt> key). Load a schema with:

  Wirb.load_schema! :classic_paint # make sure your colorizer is paint

You can automatically use the first colorizer of the schema by using the non-exclamation mark version:

  Wirb.load_schema :classic_paint # will fail if paint is not installed

Color schemas wanted! You've got a good looking alternative color schema? Please fork and add it to <tt>data/wirb/*</tt> :)

Colorizers wanted! Your favorite terminal colors gem is not supported yet? Please fork and add it to <tt>lib/wirb/colorizer/*</tt> :D

=== Bundled schemas

The following schemas are bundled (load with <tt>Wirb.load_schema :name</tt> and make sure the used colorizer is available).

==== Wirb0
* <tt>:classic_wirb0</tt> (current default)

==== Paint
* <tt>:classic_paint</tt> (paint implementation of default)
* <tt>:colorless</tt> (only uses :bright, :underline and :inverse effect)

== wp
You can colorize any object with <tt>wp</tt> (wavy_print):
  require 'wirb/wp'
  wp some_object

== Also see
* Configure views for specific objects: hirb[https://github.com/cldwalker/hirb]
* Wirb is part of: irbtools[https://github.com/janlelis/irbtools]
* ripl is an irb alternative, syntax highlighting plugin (uses wirb by default): ripl-color_result[https://github.com/janlelis/ripl-color_result]
* Advanced terminal color gems: Paint[https://github.com/janlelis/paint], HighLine[https://github.com/JEG2/highline]

== Todo
* Tests for schema stuff
* More colorizers and themes
* More support for stdlib (most important: Complex)

== Credits
* Copyright (c) 2011 Jan Lelis <http://rbjl.net>, see COPYING for details.

Contributions[https://github.com/janlelis/wirb/contributors] by and thanks to:
* {Richard LeBer}[https://github.com/rleber]

Influenced by code from and thanks to:
* Copyright (C) 2006-2009 Paul Duncan <pabs@pablotron.org>

J-_-L
